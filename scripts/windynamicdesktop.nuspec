<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://chocolatey.org/docs/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>windynamicdesktop</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>{{packageVersion}}</version>
    <packageSourceUrl>https://github.com/t1m0thyj/WinDynamicDesktop/tree/{{releaseTagName}}</packageSourceUrl>
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <owners>Timothy Johnson</owners>
    <!-- ============================== -->

    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>WinDynamicDesktop (Install)</title>
    <authors>Timothy Johnson</authors>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>https://github.com/t1m0thyj/WinDynamicDesktop</projectUrl>
    <iconUrl>https://cdn.statically.io/gh/t1m0thyj/WinDynamicDesktop/189f4bb0/imgs/choco_icon.png</iconUrl>
    <copyright>2023 Timothy Johnson</copyright>
    <!-- If there is a license Url available, it is required for the community feed -->
    <licenseUrl>https://www.mozilla.org/en-US/MPL/2.0/</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <!--<projectSourceUrl>https://github.com/t1m0thyj/WinDynamicDesktop</projectSourceUrl>-->
    <docsUrl>https://github.com/t1m0thyj/WinDynamicDesktop/wiki</docsUrl>
    <mailingListUrl>https://github.com/t1m0thyj/WinDynamicDesktop/discussions</mailingListUrl>
    <bugTrackerUrl>https://github.com/t1m0thyj/WinDynamicDesktop/issues</bugTrackerUrl>
    <tags>windynamicdesktop windows10 dynamic-desktop wallpaper</tags>
    <summary>Port of macOS Mojave Dynamic Desktop feature to Windows 10</summary>
    <description>Experience Dynamic Desktop on Windows 10!

WinDynamicDesktop ports the Dynamic Desktop feature from macOS Mojave to Windows 10. It uses your location to determine the times of sunrise and sunset, and changes your desktop wallpaper based on the time of day. Choose a theme and enter your location the first time you run the app, then it will minimize to your system tray and change the wallpaper in the background. You can import custom themes or create your own, and customize the app to automatically change the Windows 10 theme color or update your location periodically.

Note: This app uses the LocationIQ API to convert your location to latitude and longitude, or the Windows location API if permission is granted. Location data is anonymous and never saved without your consent.</description>
    <releaseNotes>{{releaseNotes}}</releaseNotes>
    <!-- =============================== -->

    <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
    <!--<dependencies>
      <dependency id="" version="__MINIMUM_VERSION__" />
      <dependency id="" version="[__EXACT_VERSION__]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_INCLUSIVE]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_EXCLUSIVE)" />
      <dependency id="" />
      <dependency id="chocolatey-core.extension" version="1.1.0" />
    </dependencies>-->
    <!-- chocolatey-core.extension - https://chocolatey.org/packages/chocolatey-core.extension
         - You want to use Get-UninstallRegistryKey on less than 0.9.10 (in chocolateyUninstall.ps1)
         - You want to use Get-PackageParameters and on less than 0.11.0
         - You want to take advantage of other functions in the core community maintainer's team extension package
    -->

    <!--<provides>NOT YET IMPLEMENTED</provides>-->
    <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
    <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
  </metadata>
  <files>
    <!-- this section controls what actually gets packaged into the Chocolatey package -->
    <file src="tools\**" target="tools" />
    <!--Building from Linux? You may need this instead: <file src="tools/**" target="tools" />-->
  </files>
</package>
