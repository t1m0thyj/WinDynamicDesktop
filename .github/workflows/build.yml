name: Build

on:
  push:
    branches: [ '**' ]
    tags-ignore: [ '**' ]
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    strategy:
      fail-fast: false
      matrix:
        platform: [x86, x64, arm64]

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - uses: microsoft/setup-msbuild@v2

    - run: echo ${{ secrets.ENV_FILE }} | base64 --decode > .env
      shell: bash

    - run: scripts\version.ps1

    - run: dotnet restore WinDynamicDesktop.sln

    - run: dotnet publish src\WinDynamicDesktop.csproj -a ${{ matrix.platform }} -c Release --no-restore --self-contained -p:EnableCompressionInSingleFile=$env:EnableCompressionInSingleFile -p:IncludeNativeLibrariesForSelfExtract=$env:IncludeNativeLibrariesForSelfExtract -p:PublishSingleFile=$env:PublishSingleFile
      env:
        EnableCompressionInSingleFile: true
        IncludeNativeLibrariesForSelfExtract: true
        PublishSingleFile: true
    
    - uses: actions/upload-artifact@v4
      with:
        name: exe-${{ matrix.platform }}
        path: src\bin\Release\net8.0-windows10.0.19041.0\win-${{ matrix.platform }}\publish\*.exe

    - run: msbuild uwp\WinDynamicDesktop.Package.wapproj /v:m /p:AppxBundle=$env:AppxBundle /p:Configuration=$env:Configuration /p:Platform=$env:Platform /p:UapAppxPackageBuildMode=$env:UapAppxPackageBuildMode /p:UseTemporarySignCert=$env:UseTemporarySignCert
      env:
        AppxBundle: Never
        Configuration: Release
        Platform: ${{ matrix.platform }}
        UapAppxPackageBuildMode: SideloadOnly
        UseTemporarySignCert: true

    - uses: actions/upload-artifact@v4
      with:
        name: msix-${{ matrix.platform }}
        path: uwp\AppPackages\*\*.msix

  test:
    runs-on: windows-2025
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    needs: build

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - run: |
        cp .env.example .env
        dotnet restore WinDynamicDesktop.sln

    - name: Unit Tests
      run: dotnet test --filter type!=system --verbosity normal
      working-directory: test

    - run: |
        npm install -g appium
        Start-Process -FilePath "C:\Program Files (x86)\Windows Application Driver\WinAppDriver.exe"

    - uses: actions/download-artifact@v4
      with:
        name: exe-x64
        path: test\bin

    - name: System Tests
      run: dotnet test --filter type=system --verbosity detailed
      working-directory: test
    
    - uses: actions/upload-artifact@v4
      if: ${{ failure() }}
      with:
        name: test-dir
        path: |
          test\bin
          !test\bin\*.exe
